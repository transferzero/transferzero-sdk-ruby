=begin
#TransferZero API

#Reference documentation for the TransferZero API V1

OpenAPI spec version: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0-beta3

=end

require 'uri'

module TransferZero
  class AccountDebitsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # Creating an account debit
    # Creates a new account debit finding transaction through the internal balance  To successfully fund a transaction - - The currency needs to be the same as the input_currency on the transaction - The amount has to be the same as the input_amount on the transaction - The to_id is the id of the transaction - You need to have enough balance of the appropriate currency inside your wallet  Once the transaction is funded, we will immediately start trying to pay out the recipient(s).  It is also possible to create multiple account debits by supplying an array of debit objects 
    # @param debit_request_wrapper 
    # @param [Hash] opts the optional parameters
    # @return [DebitListResponse]
    def post_accounts_debits(debit_request_wrapper, opts = {})
      data, _status_code, _headers = post_accounts_debits_with_http_info(debit_request_wrapper, opts)
      data
    end

    # Creating an account debit
    # Creates a new account debit finding transaction through the internal balance  To successfully fund a transaction - - The currency needs to be the same as the input_currency on the transaction - The amount has to be the same as the input_amount on the transaction - The to_id is the id of the transaction - You need to have enough balance of the appropriate currency inside your wallet  Once the transaction is funded, we will immediately start trying to pay out the recipient(s).  It is also possible to create multiple account debits by supplying an array of debit objects 
    # @param debit_request_wrapper 
    # @param [Hash] opts the optional parameters
    # @return [Array<(DebitListResponse, Fixnum, Hash)>] DebitListResponse data, response status code and response headers
    def post_accounts_debits_with_http_info(debit_request_wrapper, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AccountDebitsApi.post_accounts_debits ...'
      end
      # verify the required parameter 'debit_request_wrapper' is set
      if @api_client.config.client_side_validation && debit_request_wrapper.nil?
        fail ArgumentError, "Missing the required parameter 'debit_request_wrapper' when calling AccountDebitsApi.post_accounts_debits"
      end
      # resource path
      local_var_path = '/accounts/debits'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(debit_request_wrapper)
      auth_names = ['AuthorizationKey', 'AuthorizationNonce', 'AuthorizationSecret', 'AuthorizationSignature']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DebitListResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AccountDebitsApi#post_accounts_debits\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
